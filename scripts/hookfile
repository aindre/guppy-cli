#!/usr/bin/env node
'use strict';

var spawn = require('child_process').spawn;
var cwd = process.env.PWD || process.cwd();

var path = require('path');
var hookName = process.argv[1].split(path.sep).pop();
var restArgs = process.argv.slice(2).join('\u263a');

process.env.HOOK_ARGS = restArgs;
var gulp = (process.platform === 'win32' ? 'gulp.cmd' : 'gulp');

executeHook(gulp, hookName, cwd);

// catch exceptions so node doesn't exit prematurely, leaving a runaway process
process.on('uncaughtException', function (err) {
  if (gulp === 'gulp' && err.code === 'ENOENT' && err.syscall === 'spawn gulp') {
    gulp = 'node_modules/gulp/bin/gulp.js';
    executeHook(gulp, hookName, cwd);
  } else {
    console.error(err.stack);
    hook.kill('SIGHUP');
  }
});

function executeHook(gulp, hookName, cwd) {
  var hook = spawn(gulp, [hookName], {
    stdio: 'inherit',
    cwd: cwd
  });

  hook.on('close', function (code) {
    process.exit(code);
  });
}
